% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/activate.R
\name{find_xref}
\alias{find_xref}
\title{Find an xref of a record given a set of search terms}
\usage{
find_xref(
  gedcom,
  search_patterns,
  mode = "strict",
  multiple = FALSE,
  ignore_case = FALSE
)
}
\arguments{
\item{gedcom}{A tidyged object.}

\item{search_patterns}{A named vector of terms to search for (see Details).}

\item{mode}{Whether to only return an xref if all patterns are matched ("strict"). A value of
"best" will return the xref with the most matches. If either of these still result in more than
one xref it will return an error.}

\item{multiple}{If more than one xref is found (according to mode), whether to return all xrefs
or throw an error.}

\item{ignore_case}{Should case differences be ignored in the match?}
}
\value{
A single xref for the given record. No matches will return an empty character vector.
}
\description{
Find an xref of a record given a set of search terms
}
\details{
This is a helper function to identify the xref of a record given information such
as a name or reference number. You provide a named \code{search_patterns} vector of namespaced tag-pattern pairs,
such as:

c(INDI.NAME = "Homer", INDI.SEX  = "M", INDI.BIRT.DATE = "JAN 1974")

If you're not sure what namespace to use, use the \code{mutate_tag_namespace} function.

The search patterns will be treated as regular expressions, so they will match a value if it contains
the pattern provided. You can anchor your search pattern if you want an exact match, e.g. "^JAN 1974$".
If you're not familiar with regular expressions, you may need to escape certain characters such as a
full-stop/period (i.e. \verb{\\\\.}).
}
